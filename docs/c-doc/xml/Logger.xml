<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY % gtkdocentities SYSTEM "../xml/gtkdocentities.ent">
  %gtkdocentities;
]>
<refentry id="plank-reloaded-PlankLogger">
<refmeta>
<refentrytitle role="top_of_page" id="plank-reloaded-PlankLogger.top_of_page">PlankLogger</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>PLANK-RELOADED Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>PlankLogger</refname>
<refpurpose>A logging class to display all console messages in a nice colored format.</refpurpose>
</refnamediv>

<refsect1 id="plank-reloaded-PlankLogger.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="define_keyword">#define</entry><entry role="function_name"><link linkend="PLANK-TYPE-LOGGER:CAPS">PLANK_TYPE_LOGGER</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="PlankLogger">PlankLogger</link></entry></row>
<row><entry role="datatype_keyword">struct</entry><entry role="function_name"><link linkend="PlankLoggerClass">PlankLoggerClass</link></entry></row>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="PlankLogLevel">PlankLogLevel</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>


<refsect1 id="plank-reloaded-PlankLogger.description" role="desc">
<title role="desc.title">Description</title>

</refsect1>
<refsect1 id="plank-reloaded-PlankLogger.functions_details" role="details">
<title role="details.title">Functions</title>
<para />
</refsect1>
<refsect1 id="plank-reloaded-PlankLogger.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="PLANK-TYPE-LOGGER:CAPS" role="macro">
<title>PLANK_TYPE_LOGGER</title>
<indexterm zone="PLANK-TYPE-LOGGER:CAPS"><primary>PLANK_TYPE_LOGGER</primary></indexterm>
<programlisting language="C">#define PLANK_TYPE_LOGGER (plank_logger_get_type ())
</programlisting>
<para>The type for <link linkend="PlankLogger"><type>PlankLogger</type></link>.</para>
</refsect2>
<refsect2 id="PlankLogger" role="struct">
<title>struct PlankLogger</title>
<indexterm zone="PlankLogger"><primary>PlankLogger</primary></indexterm>
<programlisting language="C">struct PlankLogger {
	GObject parent_instance;
	PlankLoggerPrivate * priv;
};
</programlisting>
<para>A logging class to display all console messages in a nice colored format.</para>
</refsect2>
<refsect2 id="PlankLoggerClass" role="struct">
<title>struct PlankLoggerClass</title>
<indexterm zone="PlankLoggerClass"><primary>PlankLoggerClass</primary></indexterm>
<programlisting language="C">struct PlankLoggerClass {
	GObjectClass parent_class;
};
</programlisting>
<para>The class structure for <link linkend="PLANK-TYPE-LOGGER:CAPS"><literal>PLANK_TYPE_LOGGER</literal></link>. All the fields in this structure are private and should never be accessed directly.</para>
<refsect3 id="PlankLoggerClass.members" role="struct_members">
<title>Members</title>
<informaltable role="struct_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="struct_members_name" colwidth="300px"/>
<colspec colname="struct_members_description"/>
<colspec colname="struct_members_annotations" colwidth="200px"/>
<tbody>
</tbody></tgroup></informaltable>
</refsect3>
</refsect2>
<refsect2 id="PlankLogLevel" role="enum">
<title>enum PlankLogLevel</title>
<indexterm zone="PlankLogLevel"><primary>PlankLogLevel</primary></indexterm>
<para>Controls what messages show in the console log.</para>
<refsect3 id="PlankLogLevel.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-VERBOSE:CAPS">PLANK_LOG_LEVEL_VERBOSE</para></entry>
<entry role="enum_member_description"><para>Extra debugging info. A *LOT* of messages.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-DEBUG:CAPS">PLANK_LOG_LEVEL_DEBUG</para></entry>
<entry role="enum_member_description"><para>Debugging messages that help track what the application is doing.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-INFO:CAPS">PLANK_LOG_LEVEL_INFO</para></entry>
<entry role="enum_member_description"><para>General information messages. Similar to debug but perhaps useful to non-debug users.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-NOTIFY:CAPS">PLANK_LOG_LEVEL_NOTIFY</para></entry>
<entry role="enum_member_description"><para>Messages that also show a libnotify message.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-WARN:CAPS">PLANK_LOG_LEVEL_WARN</para></entry>
<entry role="enum_member_description"><para>Any messsage that is a warning.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-CRITICAL:CAPS">PLANK_LOG_LEVEL_CRITICAL</para></entry>
<entry role="enum_member_description"><para>Any message considered critical. These can be recovered from but might make the application function abnormally.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="PLANK-LOG-LEVEL-ERROR:CAPS">PLANK_LOG_LEVEL_ERROR</para></entry>
<entry role="enum_member_description"><para>Any message considered an error. These generally break the application.</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>

</refsect1>

</refentry>
